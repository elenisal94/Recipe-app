<% layout ('layouts/boilerplate') %>

    <div class="row">
        <h1 class="text-center">New Recipe</h1>
        <div class="col-10 offset-1">
            <form id="recipeForm" action="/recipes" method="POST">
                <div class="mb-3">
                    <h3>General Info</h3>
                    <label class="form-label" for="title">Recipe name:</label>
                    <div class="col-12 col-sm-10 col-md-5 col-xl-4">
                        <input class="form-control" type="text" id="title" name="recipe[title]"
                            placeholder="e.g. Divine turkey steak" required>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="description">Briefly describe this recipe (4 sentences max.):</label>
                    <div><textarea class="form-control" id="description" name="recipe[description]" rows="5" cols="50"
                            maxlength="200" required
                            placeholder="e.g. Savor the delicious combination of expertly seasoned pan-seared turkey steaks paired with al dente garlic Parmesan pasta. This quick and flavorful recipe is a perfect choice for a delightful and satisfying dinner."></textarea>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="country">Recipe origin country:</label>
                    <select class="form-select" name="recipe[countryCode]" id="country" required>
                        <% Object.entries(countryInfoData).forEach(([code, country])=> { %>
                            <option value="<%= code %>" <%=code==='Unknown' ? ' selected' : '' %>>
                                <%= country.countryFullname %>
                                    <%= country.countryFlag %>
                            </option>
                            <% }); %>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="image">Recipe image URL:</label>
                    <input class="form-control" type="url" id="image" name="recipe[image]" required>
                </div>

                <div class="mb-3">
                    <p>Preparation time:</p>
                    <div class="row g-1">
                        <div class="col-3 col-sm-3 col-lg-2 col-xl-1">
                            <select class="form-select text-center" id="prepHours" name="recipe[prepHours]">
                                <option value="0" selected>-</option>
                                <% for (let i=1; i <=48; i++) { %>
                                    <option value="<%= i %>">
                                        <%= i %>
                                    </option>
                                    <% } %>
                            </select>
                        </div>
                        <div class="col-2 col-sm-2 col-lg-1 text-start mt-3 ml-0 pl-0">
                            <label class="form-label" for="prepHours">hours</label>
                        </div>
                        <div class="col-3 col-sm-3 col-lg-2 col-xl-1">
                            <select class="form-select text-center" id="prepMinutes" name="recipe[prepMinutes]"
                                placeholder="minutes">
                                <option value="0" selected>-</option>
                                <option value="5">5</option>
                                <option value="10">10</option>
                                <option value="15">15</option>
                                <option value="20">20</option>
                                <option value="25">25</option>
                                <option value="30">30</option>
                                <option value="35">35</option>
                                <option value="40">40</option>
                                <option value="45">45</option>
                                <option value="50">50</option>
                                <option value="55">55</option>
                            </select>
                        </div>
                        <div class="col-3 col-sm-2 col-lg-1 text-start mt-3 ml-0 pl-0">
                            <label class="form-label" for="prepMinutes">minutes</label>
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label" for="serves">Serves:</label>
                    <div class="col-3 col-lg-2 col-xl-1">
                        <select class="form-select text-center" id="serves" name="recipe[serves]" required>
                            <option value="0" selected>-</option>
                            <% for (let i=1; i <=15; i++) { %>
                                <option value="<%= i %>">
                                    <%= i %>
                                </option>
                                <% } %>
                        </select>
                    </div>
                </div>

                <div class="mb-4">
                    <h3>Ingredients</h3>
                    <p>Please <b>first</b> select your preferred measurement system before adding any ingredients.</p>
                    <label class="form-label" aria-label="Disabled select example" for="preferredSystem">Preferred
                        measurement system:</label>
                    <div class="col-9 col-sm-6 col-md-4 col-xl-3">
                        <select class="form-select" name="preferredSystem" id="preferredSystem"
                            onchange="UpdateHiddenInput()">
                            <option value="metric" selected>Metric</option>
                            <option value="imperial">Imperial</option>
                        </select>
                    </div>
                    <input type="hidden" name="recipe[measurementSystem]" id="measurementSystemHidden">

                    <div id="ingredientsContainer" class="row mb-3 list-group">
                        <!-- Ingredient input fields will be dynamically added here -->
                    </div>
                    <button type="button" class="btn btn-primary" onclick="addIngredient();">Add
                        Ingredient</button>
                </div>
                <div class="mb-4">
                    <h3>Method</h3>
                    <p>Please add any recipe steps below.</p>
                    <div id="stepsContainer">
                        <!-- Steps input fields will be dynamically added here -->
                    </div>
                    <button type="button" class="btn btn-primary" onclick="addStep()">Add Step</button>
                </div>
                <div class="my-3">
                    <button class="btn btn-success col-12 col-lg-3 offset-lg-5 mt-3" type="submit">Add Recipe</button>
                </div>
            </form>
            <a href="/recipes">All Recipes</a>
        </div>
    </div>



    <script>
        UpdateHiddenInput();

        function UpdateHiddenInput() {
            const selectedSystem = document.getElementById('preferredSystem').value;
            document.getElementById('measurementSystemHidden').value = selectedSystem
            console.log(document.getElementById('measurementSystemHidden').value)
        }

        let ingredientIndex = 0;
        function addIngredient() {
            const container = document.getElementById('ingredientsContainer');
            const ingredientInputs = document.createElement('div');
            const preferredSystem = document.getElementById('preferredSystem');
            const metricUnits = [{ value: null, text: '-' },
            { value: "l", text: "liters" },
            { value: "g", text: "grams", },
            { value: "ml", text: "milliliters" },
            { value: "kg", text: "kilograms" },
            { value: "tsp", text: "teaspoons" },
            { value: "Tbs", text: "tablespoons" },
            { value: "cup", text: "cups" },
            { value: "mg", text: "milligrams" },
            ];
            const imperialUnits = [{ value: null, text: '-' },
            { value: "gal", text: "gallons" },
            { value: "oz", text: "ounces" },
            { value: "tsp", text: "teaspoons" },
            { value: "Tbs", text: "tablespoons" },
            { value: "cup", text: "cups" },
            { value: "qt", text: "quarts" },
            { value: "fl-oz", text: "fluid ounces" },
            { value: "lb", text: "pounds" },
            ];

            ingredientInputs.innerHTML = `
            <div class="list-group-item">
                <div class="row g-1">
                    <div class="col-12 col-md-3 col-lg-3 col-xl-2 text-sm-start text-md-end text-lg-end">
                            <label class="form-label mt-2">Amount (optional):</label>
                    </div>
                    <div class="col-12 col-md-2 col-lg-2 col-xl-1">
                        <input class="form-control" name="recipe[ingredients][${ingredientIndex}][amount]" placeholder="-">
                    </div>
                    <div class="col-12 col-md-3 col-lg-3 col-xl-2 text-sm-start text-md-end text-lg-end">
                        <label class="form-label mt-2">Unit (optional):</label>
                    </div>
                    <div class="col-12 col-md-4 col-lg-4 col-xl-2">
                        <select class="form-select" name="recipe[ingredients][${ingredientIndex}][measurementShorthand]">
                            ${preferredSystem.value === 'metric' ? metricUnits.map(unit => `<option value="${unit.value}">${unit.text}</option>`) : imperialUnits.map(unit => `<option value="${unit.value}" data-system="${unit.system}">${unit.text}</option>`)}
                        </select>
                    </div>
                    <div class="col-12 col-md-3 col-lg-3 col-xl-2 text-sm-start text-md-end text-lg-end">
                        <label class="form-label mt-2">Ingredient name:</label>
                    </div>
                    <div class="col-12 col-md-4 col-lg-5 col-xl-2">
                        <input class="form-control" type="text" name="recipe[ingredients][${ingredientIndex}][ingredientName]" required>
                    </div>
                    <div class= "col-12 col-md-2 col-lg-2 col-xl-1 mt-3 mt-md-1">   
                        <button type="button" class="btn btn-danger" style="width: 100%;" onclick="deleteIngredient(this.parentNode.parentNode.parentNode); resetMeasurementSystem()">Delete</button>
                    </div>
                </div>
            </div>
                `;
            container.appendChild(ingredientInputs);
            ingredientIndex++;
            disableMeasurementSystem();
        }

        function disableMeasurementSystem() {
            const ingredientsContainer = document.getElementById('ingredientsContainer');
            const preferredSystem = document.getElementById('preferredSystem');
            if (ingredientsContainer.children.length > 0) {
                preferredSystem.disabled = true;
            }
        }

        function resetMeasurementSystem() {
            const ingredientsContainer = document.getElementById('ingredientsContainer');
            const measureSystemSelect = document.getElementById('preferredSystem');
            if (ingredientsContainer.children.length === 0) {
                measureSystemSelect.disabled = false;
            }
        }

        function deleteIngredient(button) {
            button.parentNode.remove();
        }

        let stepIndex = 0;
        function addStep() {
            const container = document.getElementById('stepsContainer');
            const stepInput = document.createElement('div');
            stepInput.innerHTML = `
                <div class="row mb-2">
                    <div class="col-12 col-xl-1">
                        <label class="form-label mt-2">Step ${stepIndex + 1}:</label>
                    </div>
                    <div class="col-12 col-xl-10">
                        <textarea class="form-control" name="recipe[method][${stepIndex}]" rows="1" cols="50" required></textarea>
                    </div>
                    <div class="col-xl-1">
                        <button type="button" class="btn btn-danger float-end mt-2 mt-xl-0" onclick="deleteStep(this.parentNode.parentNode)">Delete</button>
                    </div>
                </div>
            `;
            container.appendChild(stepInput);
            stepIndex++;
        }

        function deleteStep(button) {
            const container = document.getElementById('stepsContainer');
            const steps = Array.from(container.children);
            const deletedIndex = steps.indexOf(button.parentNode);
            button.parentNode.remove();
            updateStepNumbers(deletedIndex);
        }

        function updateStepNumbers(deletedIndex) {
            const container = document.getElementById('stepsContainer');
            const steps = Array.from(container.children);
            steps.forEach((step, index) => {
                const label = step.querySelector('label');
                const textarea = step.querySelector('textarea');
                label.textContent = `Step ${index + 1}:`;
                textarea.name = `recipe[method][${index}]`;
            });
            if (deletedIndex !== undefined) {
                stepIndex = steps.length;
            }
        }

    </script>